CodeCaptionProject {	#name : 'CipherLibTest',	#codeCaptions : Set [		CodeCaptionComment {			#id : 308919040,			#repository : 'IceLibgitRepository(CipherLibTest)',			#package : RPackage {				#classDefinedSelectors : {					#ShiftCipherTest : Set [						#testDecipherCesar,						#testCipherDecipherCesar,						#testCesarEdge,						#setUp,						#cesarCipherWithShortAlphabet					],					#VigenereTest : Set [						#testNullShift,						#testBadCharacter,						#testDecipherABkey,						#testABkey,						#testCipherTextABkey					],					#RailFenceTest : Set [						#railFenceCipherClass,						#testOneRail,						#testTwoRails,						#testTwoRailsMultiMessageDiffSize,						#testTwoRailsMultiMessage					],					#BasicShiftCipherTest : Set [						#testCipherCharactersCesar,						#testCipherDecipherCesar,						#nullCipher,						#setUp,						#cesarCipher,						#testMissingCharacter					],					#CesarCipherTest : Set [						#testCipherDecipher,						#setUp,						#testCipherCharacters,						#cesarCipher,						#testCipher					]				},				#metaclassDefinedSelectors : { },				#classExtensionSelectors : { },				#metaclassExtensionSelectors : { },				#classes : Set [					#ShiftCipherTest,					#VigenereTest,					#RailFenceTest,					#BasicShiftCipherTest,					#CesarCipherTest				],				#name : #CipherTestCases,				#classTags : Set [					RPackageTag {						#package : @4,						#name : #Substitution,						#classNames : Set [							#BasicShiftCipherTest,							#VigenereTest,							#ShiftCipherTest,							#CesarCipherTest						]					},					RPackageTag {						#package : @4,						#name : #Transposition,						#classNames : Set [							#RailFenceTest						]					}				]			},			#captionNode : CodeCaptionSource {				#methodNode : 'RBMethodNode selector: #cesarCipherWithShortAlphabet body: (RBSequenceNode temporaries: {RBVariableNode named: #cipherClass. } statements: {RBAssignmentNode variable: (RBVariableNode named: #cipherClass) value: (RBMessageNode receiver: (RBVariableNode named: #Smalltalk) selector: #at:ifAbsent: arguments: {RBLiteralValueNode value: #ShiftCipher. RBBlockNode body: (RBSequenceNode statements: {RBReturnNode value: (RBLiteralValueNode value: nil). }). }). RBReturnNode value: (RBMessageNode receiver: (RBVariableNode named: #cipherClass) selector: #keyword:alphabet: arguments: {RBLiteralValueNode value: \'D\'. RBLiteralValueNode value: \' O P Q R S T U V W X Y Z A B C D E F G H I J K L M N\'. }). })',				#node : 'RBReturnNode value: (RBLiteralValueNode value: nil)',				#nodeClass : Class [ #ShiftCipherTest ]			},			#nodeFound : true,			#comment : 'We should use NullObject Pattern here',			#author : 'FedericoBalaguer'		}	],	#packages : Set [		@4	],	#gitDirectory : 'pharo-local/iceberg/CipherLibTest'}